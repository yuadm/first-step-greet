
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// IMPORTANT: Avoid VITE_* env vars in Lovable runtime. Use explicit URL/keys.
const SUPABASE_URL = 'https://vfzyodedgtefvxcrqdtc.supabase.co';
const SUPABASE_PUBLISHABLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZmenlvZGVkZ3RlZnZ4Y3JxZHRjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc2ODM3MjcsImV4cCI6MjA2MzI1OTcyN30.pj0n5Sv_I24lgjdh7bq7565lBfks3tQE-NKnxmTn9Yg';

// Pre-check for any existing Supabase session keys in storage.
// If no session keys exist, disable autoRefreshToken to avoid refresh_token_not_found noise.
const hasSupabaseSession = (() => {
  try {
    // Look for common Supabase keys in localStorage/sessionStorage
    const lsKeys = Object.keys(localStorage || {});
    const ssKeys = Object.keys(sessionStorage || {});
    const allKeys = [...lsKeys, ...ssKeys];
    return allKeys.some((k) => k.startsWith('supabase.auth.') || k.includes('sb-'));
  } catch {
    return false;
  }
})();

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: hasSupabaseSession,
  }
});
